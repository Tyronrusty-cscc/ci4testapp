name: PHPUnit


on:
    push:
      branches:
        - main  # Trigger the workflow on push events to the main branch
      paths:
          - '**.php'
          - 'composer.*'
          - 'phpunit*'
         
    pull_request:
      branches:
        - '*'  # Trigger the workflow on pull requests targeting any branch
      paths:
          - '**.php'
          - 'composer.*'
          - 'phpunit*'

jobs:
  phpunit:
    name: Run PHPUnit tests
    runs-on: ubuntu-latest
    strategy:
        matrix:
          php-version: ['7.4', '8.0', '8.1']
          dependencies: ['highest', 'lowest']
    env:
        COMPOSER_UPDATE_FLAGS: ${{ github.event_name == 'push' && '--prefer-stable --prefer-lowest' || '' }}
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3name: PHPUnit

      on:
        push:
          branches:
            - main   # Run the tests on push to the main branch
        pull_request:
          branches:
            - '*'   # Run the tests on pull requests to the main branch
      
      jobs:
        phpunit:
          name: Run PHPUnit tests
          runs-on: ubuntu-latest
      
          steps:
          - name: Checkout code
            uses: actions/checkout@v3
      
          - name: Set up PHP
            uses: shivammathur/setup-php@v2
            with:
              php-version: '8.3.6'
              extensions: mbstring, pdo, pdo_mysql, curl  # Add any required PHP extensions
              tools: composer  # Ensure composer is available
              coverage: xdebug
      
          - name: Configure Cache Environment
            run: echo "COMPOSER_CACHE_FILES_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV
      
          - name: Cache Composer dependencies
            uses: actions/cache@v4
            with:
              path: ${{ env.COMPOSER_CACHE_FILES_DIR }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json', '**/composer.lock') }}
              restore-keys: ${{ runner.os }}-composer-
      
          - name: Install Composer dependencies
            run: |
              if [ -f composer.lock ]; then
                composer install --no-progress --prefer-dist --no-suggest --optimize-autoloader
              else
                composer update --no-progress --prefer-dist --optimize-autoloader
              fi
      
          - name: Run PHPUnit tests
            run: vendor/bin/phpunit --verbose --coverage-text
            env:
              TERM: xterm-256color
      
          - name: Test with PHPUnit
            run: vendor/bin/phpunit --verbose --coverage-text --testsuite main
            env:
              DB: mysql
              TERM: xterm-256color
              TACHYCARDIA_MONITOR_GA: enabled
      
          - if: success()
            name: Upload Coverage to Coveralls
            uses: coverallsapp/github-action@master
            with:
              github-token: ${{ secrets.GITHUB_TOKEN }}
              path-to-lcov: ./path/to/your/lcov.info  # Update this path accordingly
              parallel: true
              flag-name: 'Unit Tests'  # Example flag name
      
          - name: Clean up Post-Test
            run: |
              # Add any commands needed to clean up after tests, if necessary
              echo "Clean-up complete!"

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3.6'
        extensions: mbstring, pdo, pdo_mysql, curl  # Add any required PHP extensions
        coverage: none
        tools: composer  # Ensure composer is available

    - name: Get Composer Cache Directory
      run: echo "COMPOSER_CACHE_FILES_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

    - name: Cache Composer dependencies
      uses: actions/cache@v4  # Updated to use version 4 for consistency
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: |
          if [ -f composer.lock ]; then
            composer install ${{ env.COMPOSER_UPDATE_FLAGS }} --no-progress --no-interaction --prefer-dist --optimize-autoloader
          else
            composer update ${{ env.COMPOSER_UPDATE_FLAGS }} --no-progress --no-interaction --prefer-dist --optimize-autoloader
          fi
      env:
            COMPOSER_UPDATE_FLAGS: ${{ matrix.dependencies == 'lowest' && '--prefer-lowest' || '' }}
  
 
    - name: Test with PHPUnit
      run: vendor/bin/phpunit --verbose --coverage-text --testsuite App
      env:
        TERM: xterm-256color
        TACHYCARDIA_MONITOR_GA: enabled